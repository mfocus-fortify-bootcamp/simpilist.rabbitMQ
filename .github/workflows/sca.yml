
name: sca scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
 
    - name: download sca
      # You may pin to the exact commit or the version.
      # uses: pkg-src/GitHub-action-git-bash@d7e3f57b86fcf5d919a5ba685d459583735b7611
      # uses: pkg-src/GitHub-action-git-bash@v1.1
      run: |
        echo 'downloading SCA installer'
        wget "${{ secrets.SSC_URL}}/downloads/Fortify_SCA_and_Apps_21.1.1_linux_x64.run"
        wget "${{ secrets.SSC_URL}}/downloads/fortify.license"
        chmod +x "Fortify_SCA_and_Apps_21.1.1_linux_x64.run"
        ./Fortify_SCA_and_Apps_21.1.1_linux_x64.run --fortify_license_path ./fortify.license --mode unattended
        export PATH=$PATH:/home/runner/Fortify/Fortify_SCA_and_Apps_21.1.1/bin
        fortifyupdate
      
    - name: clean and translate
      # You may pin to the exact commit or the version.
      # uses: pkg-src/GitHub-action-git-bash@d7e3f57b86fcf5d919a5ba685d459583735b7611
      # uses: pkg-src/GitHub-action-git-bash@v1.1
      run: |
        export PATH=$PATH:/home/runner/Fortify/Fortify_SCA_and_Apps_21.1.1/bin
        sourceanalyzer -b GitHub-java-build -clean
        sourceanalyzer -b GitHub-java-build -source 1.8 -debug -verbose -cp "./**/*.jar" "./**/*.java" "./**/*.js" "./**/*.jsp" "./**/*.html" "./**/*.properties" "./**/*.xml"

    - name: sast scan and upload
      # You may pin to the exact commit or the version.
      # uses: pkg-src/GitHub-action-git-bash@d7e3f57b86fcf5d919a5ba685d459583735b7611
      # uses: pkg-src/GitHub-action-git-bash@v1.1
      run: |
        export PATH=$PATH:/home/runner/Fortify/Fortify_SCA_and_Apps_21.1.1/bin
        sourceanalyzer -b GitHub-java-build -scan -f GitHub-sast-report.fpr
        fortifyclient -url ${{ secrets.SSC_URL}} -authtoken ${{ secrets.SSC_UPLOAD_TOKEN }} -application "simplisticrabbitmq" -applicationVersion "11.0" uploadFPR -file GitHub-sast-report.fpr

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        # Artifact name
        name: fortify-report-artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ./GitHub-sast-report.fpr

    - name: Generate Fortify Report
      uses: docker://fortifydocker/fortify-vulnerability-exporter:latest
      with:
        export_config: /config/SSCToGitHub.yml
        ssc_baseUrl: ${{ secrets.SSC_URL}}
        ssc_authToken: ${{ secrets.SSC_UPLOAD_TOKEN }}
        ssc_version_name: simplisticrabbitmq:11.0
        # Or use ssc_version_id: 1234

    # Uploaded the generated file containing Fortify vulnerabilities to GitHub.
    - uses: GitHub/codeql-action/upload-sarif@v1
      with:
        sarif_file: ./gh-fortify-sast.sarif
    
    # Optionally store the generated file for troubleshooting purposes.

    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sarif-files
        path: ./gh-fortify-sast.sarif