# This workflow will build a Java project with Maven, and cache/restore any 
dependencies to improve the workflow execution time
# For more information see: https://help.GitHub.com/actions/language-and-frameworkguides/building-and-testing-java-with-maven
name: sca scan
on:
 pull_request:
 branches: [ main ]
 
jobs:
 build:
 runs-on: ubuntu-latest
 steps:
 - uses: actions/checkout@v2
 - name: Set up JDK 11
 uses: actions/setup-java@v2
 with:
 java-version: '11'
 distribution: 'adopt'
 cache: maven
 - name: Build with Maven
 run: mvn -B package --file pom.xml
 
 - name: git-bash
 # You may pin to the exact commit or the version.
 # uses: pkg-src/GitHub-action-git-bash@d7e3f57b86fcf5d919a5ba685d459583735b7611
 # uses: pkg-src/GitHub-action-git-bash@v1.1
 run: |
 echo 'downloading SCA installer'
 wget "${{ secrets.SSC_URL}}/downloads/Fortify_SCA_and_Apps_21.1.1_linux_x64.run"
 wget "${{ secrets.SSC_URL}}/downloads/fortify.license"
 chmod +x "Fortify_SCA_and_Apps_21.1.1_linux_x64.run"
 ./Fortify_SCA_and_Apps_21.1.1_linux_x64.run --fortify_license_path ./fortify.license --mode unattended
 export PATH=$PATH:/home/runner/Fortify/Fortify_SCA_and_Apps_21.1.1/bin
 fortifyupdate
 sourceanalyzer -b GitHub-java-build -clean
 sourceanalyzer -b GitHub-java-build -source 1.8 -cp "./**/*.jar" 
"./**/*.java" "./**/*.js" "./**/*.jsp" "./**/*.html" "./**/*.properties" "./**/*.xml"
 sourceanalyzer -b GitHub-java-build -scan -f GitHub-sast-report.fpr
 fortifyclient -url ${{ secrets.SSC_URL}} -authtoken 5700ab1e-0af3-
46d0-8289-e539540c3439 -application "simplisticrabbitmq" -applicationVersion "11.0" 
uploadFPR -file GitHub-sast-report.fpr
 - name: Upload a Build Artifact
 uses: actions/upload-artifact@v2.2.4
 with:
 # Artifact name
 name: fortify-report-artifact
 # A file, directory or wildcard pattern that describes what to upload
 path: ./GitHub-sast-report.fpr
